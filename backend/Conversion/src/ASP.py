#------------------------------------辞書定義--------------------------------#
#小文字(a-z:0-25) 大文字26-51(A-Z:26-51) 数字(0-10:52-61)
ASPe = {'a':0, 'b':1, 'c':2, 'd':3, 'e':4, 'f':5, 'g':6, 'h':7, 'i':8, 'j':9, 'k':10, 'l':11, 'm':12, 'n':13, 'o':14, 'p':15, 'q':16, 'r':17, 's':18, 't':19, 'u':20, 'v':21, 'w':22, 'x':23, 'y':24, 'z':25, 'A':26, 'B':27, 'C':28, 'D':29, 'E':30, 'F':31, 'G':32, 'H':33, 'I':34, 'J':35, 'K':36, 'L':37, 'M':38, 'N':39, 'O':40, 'P':41, 'Q':42, 'R':43, 'S':44, 'T':45, 'U':46, 'V':47, 'W':48, 'X':49, 'Y':50, 'Z':51, '0':52, '1':53, '2':54, '3':55, '4':56, '5':57, '6':58, '7':59, '8':60, '9':61}

#逆探索用小文字(0-25:a-z) 大文字(26-51:A-Z) 数字(52-61:0-10)
ASPd ={'0':'a', '1':'b', '2':'c', '3':'d', '4':'e', '5':'f', '6':'g', '7':'h', '8':'i', '9':'j', '10':'k', '11':'l', '12':'m', '13':'n', '14':'o', '15':'p', '16':'q', '17':'r', '18':'s', '19':'t', '20':'u', '21':'v', '22':'w', '23':'x', '24':'y', '25':'z', '26':'A', '27':'B', '28':'C', '29':'D', '30':'E', '31':'F', '32':'G', '33':'H', '34':'I', '35':'J', '36':'K', '37':'L', '38':'M', '39':'N', '40':'O', '41':'P', '42':'Q', '43':'R', '44':'S', '45':'T', '46':'U', '47':'V', '48':'W', '49':'X', '50':'Y', '51':'Z', '52':'0', '53':'1', '54':'2', '55':'3', '56':'4', '57':'5', '58':'6', '59':'7', '60':'8', '61':'9'}
#------------------------------------------------------------------------------#



#------------------------------ (10-62)進数変換 -------------------------------#
#10→62進数変換
def encode62(n):
    if (int(n/62)):
        return encode62(int(n/62)) + ASPd[str(n%62)]
    return ASPd[str(n%62)]

#62→10進数に変換
def decode62(s):
    x = 0
    for i in range(1,len(str(s))+1):
        x += int(ASPe[s[-i]])*(62**(i-1))
    return x
#------------------------------------------------------------------------------#



#----------------- 暗号処理 -------------------#
#str型の文字をASP(数)に変換する関数
def str_to_ASP(s):
    return ASPe[s]

#平文を入力しASP変換し(文字 → 数字)、list型にしたものを出力
def list_encdoe62(s):
    return list(map(str_to_ASP, s))

#RSA変換でlistで帰ってくる

#list型10進数暗号文を62進数(文字のASC)表記
def list_encode_base62(l):
    return "/".join(list(map(encode62, l)))

#-----------------------------------------------#




#------------------ 復号処理 --------------------#
#str型のASP（数）をstr型文字に変換
def ASP_to_str(s):
    return ASPd[str(s)]


#str型暗号文(/区切りの62進数)を10進数変換し、list型にしたものを出力
def list_decode62(s: str) -> list:
    l = list(map(str, s.split("/")))
    return list(map(decode62, l))

#RSAで復号して復号されたlist型10進数がかえってくる

#復号されたlist型文(10進数)をASC(文字)に変換し、結合して返す
def join_encode(l):
    l = list(map(ASP_to_str, l))
    print(l)
    l = "".join(l)
    return l
#-------------------------------------------------#

l = "HelloWorld"
print(l)
l = list_encdoe62(l)
print(l)
l = list_encode_base62([141189, 161617, 564, 54])
print(l)
l = list_decode62(l)
l = [32, 15, 60, 10]
print(l)
l = join_encode(l)
print(l)
